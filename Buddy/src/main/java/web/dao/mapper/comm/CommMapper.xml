<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="web.dao.face.comm.CommDao">
	
	<select id="selectRList" resultType="CommBoard">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				SELECT
					comm_no, cate_animal, cate_content, comm_title
					, comm_content, comm_writer_nick, comm_writedate, comm_update
					, comm_hit, comm_like_cnt, comm_cmt_cnt, userno
				FROM comm_board
				ORDER BY comm_writedate DESC
			) B
		) BOARD
		WHERE rnum BETWEEN 1 AND 5
	</select>
	
	<select id="selectPList" resultType="CommBoard">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				SELECT
					comm_no, cate_animal, cate_content, comm_title
					, comm_content, comm_writer_nick, comm_writedate, comm_update
					, comm_hit, comm_like_cnt, comm_cmt_cnt, userno
				FROM comm_board
				ORDER BY comm_like_cnt DESC
			) B
		) BOARD
		WHERE rnum BETWEEN 1 AND 5
	</select>
	
	
	
	<select id="selectCntAll" resultType="int" parameterType="hashmap">
		SELECT count(*) FROM comm_board
		<where>
			<if test="animal != null and !animal.equals('')">
				AND cate_animal LIKE #{animal }
			</if>
			<if test="category != null and !category.equals('')">
				AND cate_content LIKE #{category }
			</if>
			<if test="keyword != null and !keyword.equals('')">
				AND ( comm_title LIKE '%' || #{keyword } || '%' OR comm_writer_nick LIKE '%' || #{keyword } || '%' )
			</if>
			<if test="searchType != null and searchType.equals('commTitle')">
				<if test="keyword != null and !keyword.equals('')">
					AND ( comm_title LIKE '%' || #{keyword } || '%' )
				</if>
			</if>
			<if test="searchType != null and searchType.equals('commWriterNick')">
				<if test="keyword != null and !keyword.equals('')">
					AND ( comm_writer_nick LIKE '%' || #{keyword } || '%' )
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectList" resultType="CommBoard" parameterType="hashmap">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				SELECT
					comm_no, cate_animal, cate_content, comm_title
					, comm_content, comm_writer_nick, comm_writedate, comm_update
					, comm_hit, comm_like_cnt, comm_cmt_cnt, userno
				FROM comm_board
				<where>
					<if test="animal != null and !animal.equals('')">
						AND cate_animal LIKE #{animal }
					</if>
					<if test="category != null and !category.equals('')">
						AND cate_content LIKE #{category }
					</if>
					<if test="keyword != null and !keyword.equals('')">
						AND ( comm_title LIKE '%' || #{keyword } || '%' OR comm_writer_nick LIKE '%' || #{keyword } || '%' )
					</if>
					<if test="searchType != null and searchType.equals('commTitle')">
						<if test="keyword != null and !keyword.equals('')">
							AND ( comm_title LIKE '%' || #{keyword } || '%' )
						</if>
					</if>
					<if test="searchType != null and searchType.equals('commWriterNick')">
						<if test="keyword != null and !keyword.equals('')">
							AND ( comm_writer_nick LIKE '%' || #{keyword } || '%' )
						</if>
					</if>
				</where>
				ORDER BY comm_no DESC
			) B
		) BOARD
		WHERE rnum BETWEEN #{paging.startNo } AND #{paging.endNo }
	</select>
	
	<update id="updateHit" parameterType="CommBoard">
		UPDATE comm_board
		SET comm_hit = comm_hit + 1
		WHERE comm_no = #{commNo }
	</update>
	
	<select id="selectBoard" resultType="CommBoard" parameterType="CommBoard">
		SELECT
			comm_no, cate_animal, cate_content, comm_title
			, comm_content, comm_writer_nick, comm_writedate, comm_update
			, comm_hit, comm_like_cnt, comm_cmt_cnt, userno
		FROM comm_board
		WHERE comm_no = #{commNo }
	</select>
	
	<insert id="insertCommBoard" parameterType="CommBoard">
		<selectKey order="BEFORE" resultType="int" keyProperty="commNo">
			SELECT comm_board_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO comm_board ( 
			comm_no, cate_animal, cate_content, comm_title, comm_content
			, comm_writer_nick, comm_hit, comm_like_cnt, comm_cmt_cnt, userno 
		)
		VALUES ( 
			#{commNo }, #{cateAnimal }, #{cateContent }, #{commTitle }, #{commContent }
			, #{commWriterNick }, 0, 0, 0, #{userno } 
		)
	</insert>
	
	<insert id="insertCommFile" parameterType="CommFile">
		INSERT INTO comm_file ( comm_file_no, comm_no, comm_file_originname, comm_file_storedname, comm_file_size )
		VALUES ( comm_file_seq.nextval, #{commNo }, #{commFileOriginname }, #{commFileStoredname }, #{commFileSize } )
	</insert>
	
	<select id="selectCommFileByCommNo" resultType="CommFile" parameterType="CommBoard">
		SELECT
			comm_file_no, comm_no, comm_file_originname
			, comm_file_storedname, comm_file_size, comm_file_writedate
		FROM comm_file
		WHERE comm_no = #{commNo }
	</select>
	
	<select id="selectCommFileByCommFileNo" resultType="CommFile" parameterType="CommFile">
		SELECT
			comm_file_no, comm_no, comm_file_originname
			, comm_file_storedname, comm_file_size, comm_file_writedate
		FROM comm_file
		WHERE comm_file_no = #{commFileNo }	
	</select>
	
	<update id="updateCommBoard" parameterType="CommBoard">
		UPDATE comm_board SET 
			cate_animal = #{cateAnimal }
			, cate_content = #{cateContent }
			, comm_title = #{commTitle }
			, comm_content = #{commContent }
			, comm_update = sysdate
		WHERE comm_no = #{commNo }
	</update>
	
	<delete id="deleteCommFile" parameterType="CommBoard">
		DELETE comm_file
		WHERE comm_no = #{commNo }
	</delete>
	
	<delete id="deleteAllReport" parameterType="CommBoard">
		DELETE comm_report
		WHERE comm_no = #{commNo }
	</delete>
	
	<delete id="delete" parameterType="CommBoard">
		DELETE comm_board
		WHERE comm_no = #{commNo }
	</delete>
	
	
	
	<select id="findLike" resultType="int" parameterType="CommLike">
		SELECT count(*) FROM comm_like 
		WHERE comm_no = #{commNo } AND userno = #{userno }
	</select>	
	
	<insert id="likeUp" parameterType="CommLike" >
		INSERT INTO comm_like ( comm_like_no, comm_no, userno, comm_like_ck )
		VALUES( comm_like_seq.nextval, #{commNo }, #{userno }, 1 )
	</insert>
	
	<update id="likeCntUp" parameterType="CommBoard">
		UPDATE comm_board
		SET comm_like_cnt = comm_like_cnt + 1
		WHERE comm_no = #{commNo }
	</update>
	
	<select id="selectLikeCnt" resultType="CommBoard" parameterType="CommLike">
		SELECT comm_like_cnt FROM comm_board
		WHERE comm_no = #{commNo }
	</select>
	
	<delete id="likeDown" parameterType="CommLike">
	  	DELETE comm_like
	  	WHERE comm_no = #{commNo } AND userno = #{userno } 
	</delete>
	
	<update id="likeCntDown" parameterType="CommBoard">
		UPDATE comm_board
		SET comm_like_cnt = comm_like_cnt - 1
		WHERE comm_no = #{commNo }
	</update>
	
	
	
	<insert id="report" parameterType="CommReport">
		<selectKey order="BEFORE" resultType="int" keyProperty="commReportNo">
			SELECT comm_report_seq.nextval FROM dual
		</selectKey>
		
		INSERT INTO comm_report ( comm_report_no, comm_no, userno, comm_report_content )
		VALUES ( #{commReportNo }, #{commNo }, #{userno }, #{commReportContent } )
	</insert>
	
	
	
	<select id="selectAllCmt" parameterType="int" resultType="CommCmt">
		SELECT
			comm_cmt_no, comm_cmt_content, comm_cmt_writer_nick, comm_cmt_writedate
			, comm_cmt_update, comm_cmt_bundle, comm_cmt_sort, comm_cmt_depth
			, comm_cmt_delete, comm_no, userno
		FROM comm_cmt
		WHERE comm_no = #{commNo }
		ORDER BY comm_cmt_bundle, comm_cmt_no
	</select>
	
	
	
	
	
	
	
	
	<insert id="insertCmt" parameterType="CommCmt">
		INSERT INTO comm_cmt (
			comm_cmt_no, comm_cmt_content, comm_cmt_writer_nick
			, comm_cmt_bundle, comm_cmt_sort, comm_cmt_depth
			, comm_cmt_delete, comm_no, userno
		)
		VALUES (
			#{commCmtNo }, #{commCmtContent }, #{commCmtWriterNick }
			, #{commCmtNo }, 0, 0
			, 0, #{commNo }, #{userno }	
		)
	</insert>
	
	
	<insert id="insertReCmt" parameterType="CommCmt">
		<selectKey order="BEFORE" resultType="int" keyProperty="commCmtNo">
			SELECT comm_cmt_seq.nextval FROM dual
		</selectKey>
			
		INSERT INTO comm_cmt (
			comm_cmt_no, comm_cmt_content, comm_cmt_writer_nick
			, comm_cmt_bundle, comm_cmt_sort, comm_cmt_depth
			, comm_cmt_delete, comm_no, userno
		)
		VALUES (
			#{commCmtNo }, #{commCmtContent }, #{commCmtWriterNick }
			, #{commCmtBundle }, #{commCmtSort }, 1
			, #{commCmtDelete }, #{commNo }, #{userno }		
		)	
	</insert>
	
	<update id="cmtUp" parameterType="CommBoard">
		UPDATE comm_board
		SET comm_cmt_cnt = comm_cmt_cnt + 1
		WHERE comm_no = #{commNo }
	</update>
	
	<delete id="deleteCmt" parameterType="CommCmt">
		DELETE FROM comm_cmt
		WHERE comm_cmt_no = #{commCmtNo }
	</delete>
	
	<update id="cmtDown" parameterType="CommBoard">
		UPDATE comm_board
		SET comm_cmt_cnt = comm_cmt_cnt - 1
		WHERE comm_no = #{commNo }
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
</mapper>